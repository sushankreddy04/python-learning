class node:
    def __init__(self,x):
        self.data=x
        self.next=None
        self.prev=None
class linked:
    def __init__(self):
        self.head=None
        self.tail=None
    def addfront(self,x):
        if(self.head==None):
            self.head=node(x)
            self.tail = self.head
        else:
            t=node(x)
            t.next=self.head
            self.head.prev=t
            self.head=t
    def addback(self,x):
        if(self.head==None):
            self.head=node(x)
            self.tail=self.head
        else:
            t=node(x)
            self.tail.next=t
            t.prev=self.tail
            self.tail=t
    def display(self):
        if (self.head == None):
            print("Empty")
        else:
            t=self.head
            while(t!=None):
                print(t.data, end='->')
                t= t.next
            print("None")
    def displayrev(self):
        if (self.head == None):
            print("Empty")
        else:
            t=self.tail
            while(t!=None):
                print(t.data, end='->')
                t= t.prev
            print("None")


l1=linked()
l1.addfront(5)
l1.addfront(4)
l1.addback(3)
l1.addfront(4)
l1.addback(2)
l1.addback(1)
l1.display()
l1.displayrev()